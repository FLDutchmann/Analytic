import Mathlib.MeasureTheory.Integral.Asymptotics

import Analytic.Mathlib.MeasureTheory.Integral.IntegrableOn

open Asymptotics MeasureTheory Set Filter

variable {Œ± E F : Type*} [NormedAddCommGroup E] {f : Œ± ‚Üí E} {g : Œ± ‚Üí F} {a : Œ±} {l : Filter Œ±}

namespace Asymptotics

section Basic

variable [MeasurableSpace Œ±] [NormedAddCommGroup F] {Œº : Measure Œ±}

theorem IsBigO.integrableOn (s : Set Œ±) (hs : MeasurableSet s) (hf : f =O[ùìü s] g)
    (hfm : AEStronglyMeasurable f (Œº.restrict s)) (hg : IntegrableOn g s Œº) :
    IntegrableOn f s Œº := by
  rw [‚Üê integrableAtFilter_principal_iff] at hg ‚ä¢
  rw [‚Üê principal_isMeasurablyGenerated_iff] at hs
  apply hf.integrableAtFilter _ hg
  apply AEStronglyMeasurable.stronglyMeasurableAtFilter_of_mem hfm
  exact fun ‚¶Éa‚¶Ñ a ‚Ü¶ a
